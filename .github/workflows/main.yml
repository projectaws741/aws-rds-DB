# name: CI/CD Workflow

# on:
#   push:
#     branches:
#       - AppParameterStore  # Trigger build & deploy on this branch
#   workflow_dispatch:       # Allow manual trigger for any job

# jobs:

#   build:
#     name: Build Docker Image
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Login to Docker Hub
#         uses: docker/login-action@v3
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}

#       - name: Build Docker image
#         run: docker build -t ${{ secrets.DOCKER_USERNAME }}/githubactions:latest db-app

#       - name: Push Docker image
#         run: docker push ${{ secrets.DOCKER_USERNAME }}/githubactions:latest


#   deploy:
#     name: Deploy to EC2
#     runs-on: ubuntu-latest
#     needs: build   # üîÅ DEPENDENCY: deploy waits for build to finish
#     steps:
#       - name: Deploy to EC2
#         uses: appleboy/ssh-action@v1.0.0
#         with:
#           host: ${{ secrets.EC2_HOST }}
#           username: ${{ secrets.EC2_USER }}
#           key: ${{ secrets.EC2_KEY }}
#           script: |
#             sudo docker pull ${{ secrets.DOCKER_USERNAME }}/githubactions:latest
#             sudo docker stop app-container || true
#             sudo docker rm app-container || true
#             sudo docker run -d --name app-container -p 5000:5000 ${{ secrets.DOCKER_USERNAME }}/githubactions:latest


#   cleanup:
#     name: Cleanup Docker
#     runs-on: ubuntu-latest
#     if: github.event_name == 'workflow_dispatch'   # üîì Manual trigger only
#     steps:
#       - name: Cleanup Docker on EC2
#         uses: appleboy/ssh-action@v1.0.0
#         with:
#           host: ${{ secrets.EC2_HOST }}
#           username: ${{ secrets.EC2_USER }}
#           key: ${{ secrets.EC2_KEY }}
#           script: |
#             sudo docker stop $(sudo docker ps -q) || true
#             sudo docker rm $(sudo docker ps -aq) || true
#             sudo docker rmi $(sudo docker images -q) --force || true
